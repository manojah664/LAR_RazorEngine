@model LogAndReg.Models.UserViewModel
@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>



@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
            <br />
            <br />
            <a href="/User/Registration" class="btn btn-info">Cancel</a>
            <a href="/User/Index" class="btn btn-info">Login</a>

        </div>
    }

}
else
{

    using (Html.BeginForm())
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label class="custom-radio">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender" })
                        Male
                    </label>
                    <label class="custom-radio">
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender" })
                        Female
                    </label>

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2">
                    Country
                </label>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Countryid, Model.CountryList, "<--Select Countries-->", new { @class = "form-control", @id = "Countryid" })

            </div>
            <br />

            <div class="form-group">
                <label class="control-label col-md-2">
                    States
                </label>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StateId, new SelectList(" "), "<--Select States-->", new { @class = "form-control", @id = "StateId" })
            </div>
            <br />

            <div class="form-group">
                <label class="control-label col-md-2">
                    Cities
                </label>
            </div>

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, new SelectList(" "), "<--Select Cities-->", new { @class = "form-control" })
            </div>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-info btn-default" />
                </div>
            </div>

        </div>
    }

}





@section Scripts
{
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $('#StateId').change(function () {

            debugger;
            // alert($('#Countryid').val());

            var StateId = $('#StateId').val();
            $.ajax({
                type: "get",
                data: { StateId },
                dataType: 'json',
                url: "/User/GetCityName",
                success: function (result) {
                    debugger
                    if (result != 0) {
                        for (var i = 0; i <= result.length; i++) {
                            $("#CityId").append("<option value='" + result[i].Value + "'>" + result[i].Text + "</option>");
                        }
                    }
                    else {

                        alert("error")

                    }

                    //For existing user

                    //    alert(result);
                }

            });
        });


        $('#Countryid').change(function () {
            debugger;
            // alert($('#Countryid').val());

            var Countryid = $('#Countryid').val();
            $.ajax({
                type: "get",
                data: { Countryid },
                dataType: 'json',
                url: "/User/GetStateName",
                success: function (result) {
                    debugger
                    if (result != 0) {
                        for (var i = 0; i <= result.length; i++) {
                            $("#StateId").append("<option value='" + result[i].Value + "'>" + result[i].Text + "</option>");
                        }
                    }
                    else {

                        alert("error")

                    }

                    //For existing user

                    //    alert(result);
                }

            });
        });

        //submit search, display loading message
        $('input[type = submit]').click(function () {
            $.blockUI({
                css: {
                    border: 'none',
                    padding: '15px',
                    backgroundColor: '#000',
                    opacity: .6
                }
            });
        });

    </script>
}
